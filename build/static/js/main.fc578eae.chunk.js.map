{"version":3,"sources":["assets/peter-aiello-logo.svg","components/AccordionWrapper.js","components/AccordionItem.js","App.js","reportWebVitals.js","index.js"],"names":["AccordionContext","createContext","active","setActive","AccordionWrapper","props","useState","Provider","value","children","AccordionItem","index","indexCount","useContext","onClick","e","preventDefault","console","log","eventHandler","className","aria-expanded","aria-controls","aria-disabled","tabIndex","title","id","description","App","href","rel","target","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0wDAAe,G,YAAA,IAA0B,+C,qBCE5BA,EAAmBC,wBAAc,CAC1CC,OAAQ,EACRC,UAAW,eAoBAC,EAjBU,SAACC,GAEtB,MAA4BC,mBAAS,GAArC,mBAAOJ,EAAP,KAAeC,EAAf,KAEA,OACI,cAACH,EAAiBO,SAAlB,CACIC,MAAO,CACHN,SAAQC,aAFhB,SAKI,+BACKE,EAAMI,cCkCRC,EAjDO,SAACL,GAInB,IAAIM,EAAQN,EAAMM,MAMZC,EAAa,SAACD,GAEhB,OADYA,EAAQ,GAIxB,EAA8BE,qBAAWb,GAAjCE,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAShB,OACQ,gCACI,6BACI,wBACIW,QAAS,SAACC,GAAD,OAXR,SAACA,EAAGJ,GAErBI,EAAEC,iBACFb,EAAUQ,GACVM,QAAQC,IAAIhB,GAOoBiB,CAAaJ,EAAGJ,IAChCS,UAAYlB,IAAWS,EAAQ,SAAW,WAC1CU,gBAAgBnB,IAAWS,EAAQ,OAAS,QAC5CW,gBAAgB,QAAUV,EAAWD,GACrCY,gBAAgBrB,IAAWS,EAAQ,OAAS,QAC5Ca,SAAUZ,EAAWD,GANzB,SAQI,uBAAMS,UAAU,gBAAhB,UAAiCf,EAAMoB,MACnC,sBAAML,UAAYlB,IAAWS,EAAS,OAAS,iBAI3D,8BACI,qBAAKe,GAAK,QAAUd,EAAWD,GAASS,UAAYlB,IAAWS,EAAS,aAAe,cAAvF,SACKN,EAAMsB,kBAjBTtB,EAAMM,Q,MCSbiB,MAzBf,WAEE,OACE,sBAAKR,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,mBAAGS,KAAK,0BAA0BC,IAAI,aAAaC,OAAO,SAA1D,SAAmE,qBAAKC,IAAKC,EAAMb,UAAU,oBAAoBc,IAAI,WACrH,wDACA,gJAEF,qBAAKd,UAAU,cAAf,SACE,eAAC,EAAD,WACI,cAAC,EAAD,CAAeT,MAAO,EAAGc,MAAO,SAAUE,YAAa,gBACvD,cAAC,EAAD,CAAehB,MAAO,EAAGc,MAAO,SAAUE,YAAa,gBACvD,cAAC,EAAD,CAAehB,MAAO,EAAGc,MAAO,SAAUE,YAAa,wBAI/D,wBAAQP,UAAU,SAAlB,SACM,yCAAW,mBAAGS,KAAK,wDAAwDC,IAAI,aAAaC,OAAO,SAAxF,6BCnBRI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fc578eae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/peter-aiello-logo.396069cd.svg\";","import React, {createContext, useState} from 'react';\n\nexport const AccordionContext = createContext({\n    active: 0,\n    setActive: () => {}\n});\n\nconst AccordionWrapper = (props) => {\n\n    const [active, setActive] = useState(0);\n\n    return (\n        <AccordionContext.Provider\n            value={{\n                active, setActive\n            }}\n        >\n            <form>\n                {props.children}\n            </form>\n        </AccordionContext.Provider>\n    )\n}\n\nexport default AccordionWrapper; ","import React, { useState, useContext } from 'react';\nimport {AccordionContext} from './AccordionWrapper';\n\nconst AccordionItem = (props) => {\n\n    // const indexInfo = useContext(AccordionContext);\n\n    let index = props.index;\n\n    let indexPlus;\n\n    //  const [active, setActive] = useState(0);\n\n    const indexCount = (index) => {\n        indexPlus = index + 1;\n        return indexPlus;\n    }\n\n    const { active, setActive } = useContext(AccordionContext)\n\n    const eventHandler = (e, index) => {\n        // console.log(index);\n        e.preventDefault();\n        setActive(index);\n        console.log(active);\n    }\n\n    return (\n            <div key={props.index}>\n                <h3>\n                    <button \n                        onClick={(e) => eventHandler(e, index)}\n                        className={ active === index ? 'active' : 'inactive'}\n                        aria-expanded={ active === index ? 'true' : 'false' }\n                        aria-controls={ 'sect-' + indexCount(index) }\n                        aria-disabled={ active === index ? 'true' : 'false' }\n                        tabIndex={indexCount(index)}\n                    >\n                        <span className=\"title-wrapper\">{props.title}\n                            <span className={ active === index  ? 'plus' : 'minus'}></span>\n                        </span>  \n                    </button>\n                </h3>\n                <div>\n                    <div id={ 'sect-' + indexCount(index) } className={ active === index  ? 'panel-open' : 'panel-close' }>\n                        {props.description}\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nexport default AccordionItem; ","\nimport React, { useState } from 'react';\nimport logo from './assets/peter-aiello-logo.svg';\n/* Accordion specific */\nimport data from './data.json';\nimport Accordion from './components/Accordion';\nimport AccordionWrapper from './components/AccordionWrapper'; \nimport AccordionItem from './components/AccordionItem';\nimport AccordionTitle from './components/AccordionTitle';\nimport AccordionPanel from './components/AccordionPanel';\nimport './Accordion.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <div className=\"content\">\n        <div className=\"app-description\">\n          <a href=\"https://peteraiello.dev\" rel=\"noreferrer\" target=\"_blank\"><img src={logo} className=\"peter-aiello-logo\" alt=\"logo\" /></a>\n          <h1>Custom React Accordion</h1>\n          <p>Choose the section using the Tab key. Press Enter to open. Shift + Tab to go to select the previous section.</p>\n        </div>\n        <div className=\"app-wrapper\">\n          <AccordionWrapper>\n              <AccordionItem index={0} title={'item 1'} description={'lorem ipsum'} />\n              <AccordionItem index={1} title={'item 2'} description={'lorem ipsum'} />\n              <AccordionItem index={2} title={'item 3'} description={'lorem ipsum'} />\n          </AccordionWrapper>\n        </div>\n      </div>\n      <footer className=\"footer\">\n            <p>Code on <a href=\"https://github.com/peteraiello/custom-react-accordion\" rel=\"noreferrer\" target=\"_blank\">GitHub</a></p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/fonts.css';\nimport './assets/styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}